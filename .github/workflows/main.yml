# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: windows-2019

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      - run: |
          Get-Location
          Get-ComputerInfo  | select windowsversion
          [environment]::OSVersion
        shell: powershell
        name: 'Windows version'

      - run: |
          & "C:\Program Files (x86)\Microsoft Visual Studio\Installer\vswhere.exe" -latest -property catalog_productDisplayVersion
        shell: powershell
        name: 'Visual Studio version'

      - run: |
          # choco uninstall --yes --all-versions llvm
          llvm
        shell: powershell
        name: 'uninstall system llvm'
      
      - run: |
          write-host Downloading llvm
          curl https://github.com/llvm/llvm-project/releases/download/llvmorg-13.0.0/LLVM-13.0.0-win64.exe -o llvm.exe
          write-host Extracting llvm
          7z x llvm.exe -ollvm
        shell: powershell
        working-directory: ${{env.GITHUB_WORKSPACE}}
        name: 'install llvm 13'

      - run: |
          Write-Host Prepending $env:llvm_bin_path to PATH
          Write-Host "##vso[task.prependpath]$env:llvm_bin_path"
          Write-Host Prepending $env:llvm_lib_windows to PATH
          Write-Host "##vso[task.prependpath]$env:llvm_lib_windows"
        shell: powershell
        working-directory: ${{env.GITHUB_WORKSPACE}}
        name: 'set PATH'
        env:
          llvm_bin_path: ${{env.GITHUB_WORKSPACE}}\llvm\bin
          llvm_lib_windows: ${{env.GITHUB_WORKSPACE}}\llvm\lib\clang\13.0.0\lib\windows'        
      
      - run: |
          write-host Downloading fd
          Invoke-WebRequest https://github.com/sharkdp/fd/releases/download/v8.2.1/fd-v8.2.1-i686-pc-windows-msvc.zip -OutFile fd.zip
          7z x fd.zip -o"C:\Windows"
          write-host Finding files
          fd.exe -HI clang_rt.asan_dynamic-x86_64.dll
          fd.exe -HI clang_rt.asan_dll_thunk-x86_64.lib
          fd.exe -HI clang_rt.asan-x86_64.lib
          fd.exe -HI clang_rt.asan_cxx-x86_64.lib
          fd.exe -HI clang.exe
          get-command clang
        shell: powershell
        working-directory: ${{env.GITHUB_WORKSPACE}}
        name: 'find files'
        env:
          llvm_bin_path: ${{env.GITHUB_WORKSPACE}}\llvm\bin
          llvm_lib_windows: ${{env.GITHUB_WORKSPACE}}\llvm\lib\clang\13.0.0\lib\windows'     